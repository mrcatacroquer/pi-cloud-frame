#!/usr/bin/env bash

# Download a set of random photos from icloud and crop to the correct aspect ratio.
# Supports different digital frame profiles
#

USAGE="refresh_photos icloud_id icloud_pwd profile photoframe num_photos

if [ $# -ne 5 ]; then
    echo $USAGE
    exit 1
fi

ICLOUD_USER=$1
ICLOUD_PWD=$2
FRAME_PROFILE=$3
ALBUM=$4
SAMPLE_SIZE=$5

case $3 in
    nixplay)
        DOWNLOAD=/tmp/raw
        CROPPED=/tmp/crop
        OUT=media/nixplay
        ASPECT="16:9"
        ;;
    pi-cloud-frame)
        DOWNLOAD=/tmp/raw
        CROPPED=/tmp/crop
        OUT=media/photos
        ASPECT="800:480"
        ;;
    *)
        echo Unknown profile $3. Exiting.
        exit 1
esace


ROOT=`pwd`

cat << EOF
Summary:
----------------
Profile: $FRAME_PROFILE
Download folder: $DOWNLOAD
Crop folder: $CROPPED
Output folder: $OUT
icloud user: $ICLOUD_USER
icloud album: $ALBUM
# photos to download: $SAMPLE_SIZE
EOF

mkdir -p "$DOWNLOAD"
echo "Cleaning download folder $DOWNLOAD..."
rm -f "$DOWNLOAD"/*

# download photos from icloud
echo "Downloading photos to $DOWNLOAD..."
python3 downloader.py "$ICLOUD_USER" "$ICLOUD_PWD" --output "$DOWNLOAD" --album $ALBUM --sample $SAMPLE_SIZE

mkdir -p "$CROPPED"
echo "Cleaning crop folder $CROPPED..."
rm -f "$CROPPED"/*

# crop the new photos
echo "Cropping photos from $DOWNLOAD to $CROPPED..."
cd "$CROPPED"
for i in "$ROOT/$DOWNLOAD"/*; do echo `basename "$i"`; aspectcrop -a "$ASPECT" "$i" `basename "$i"`; done
cd "$ROOT"

echo "Cleaning download folder $DOWNLOAD..."
rm -f "$DOWNLOAD"/*

mkdir -p "$OUT"
echo "Cleaning final output  folder $OUT..."
rm -f "$OUT"/*

# convert the new photos
echo "Converting photos in $CROPPED to $OUT..."
cd "$OUT"
for i in "$ROOT/$CROPPED"/*; do echo `basename "$i"`; convert "$i" `basename "$i"`.jpg; done
cd "$ROOT"

echo "Cleaning crop folder $CROPPED..."
rm -f "$CROPPED"/*
